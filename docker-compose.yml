version: '3.8'

services:
  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: inventario_mysql
    environment:
      MYSQL_ROOT_PASSWORD: inventario123
      MYSQL_DATABASE: inventario_db
      MYSQL_USER: inventario_user
      MYSQL_PASSWORD: inventario_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - inventario_network
    restart: unless-stopped

  # Redis para Celery
  redis:
    image: redis:7-alpine
    container_name: inventario_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - inventario_network
    restart: unless-stopped

  # Aplicaci√≥n Flask
  web:
    build: .
    container_name: inventario_web
    environment:
      - FLASK_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventario_db
      - DB_USER=inventario_user
      - DB_PASSWORD=inventario_pass
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5000:5000"
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - inventario_network
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build: .
    container_name: inventario_celery_worker
    command: celery -A celery_worker.celery worker --loglevel=info
    environment:
      - FLASK_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventario_db
      - DB_USER=inventario_user
      - DB_PASSWORD=inventario_pass
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - inventario_network
    restart: unless-stopped

  # Celery Beat
  celery_beat:
    build: .
    container_name: inventario_celery_beat
    command: celery -A celery_worker.celery beat --loglevel=info
    environment:
      - FLASK_ENV=production
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=inventario_db
      - DB_USER=inventario_user
      - DB_PASSWORD=inventario_pass
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mysql
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - inventario_network
    restart: unless-stopped

  # Servicio de Email
  email_service:
    build: ./email_service
    container_name: inventario_email_service
    environment:
      - NODE_ENV=production
      - PORT=3001
    ports:
      - "3001:3001"
    volumes:
      - ./email_service/logs:/app/logs
    networks:
      - inventario_network
    restart: unless-stopped

  # Nginx (Proxy reverso)
  nginx:
    image: nginx:alpine
    container_name: inventario_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - web
      - email_service
    networks:
      - inventario_network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  inventario_network:
    driver: bridge
